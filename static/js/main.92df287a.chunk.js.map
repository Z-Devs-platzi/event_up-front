{"version":3,"sources":["assets/landing_background.png","assets/event_up_logo.svg","utility/api/index.js","utility/consts/index.js","utility/enpoints/auth.js","auth-provider.js","context/auth-context.js","context/user-context.js","context/app-provider.js","components/Button/styles.js","components/Button/index.js","components/LandingWraper/styles.js","styles/GlobalStyles.js","components/Logo/styles.js","components/Logo/index.js","components/LandingWraper/index.js","containers/Landing/index.js","utility/hooks/useFormFields.js","components/TextInput/styles.js","components/TextInput/index.js","styles/animations.js","components/Spiner/styles.js","components/Spiner/index.js","utility/validations/index.js","containers/SingIn/index.js","containers/Register/index.js","routes/LandingRoutes.js","containers/Home/index.js","routes/PrivateRoute.js","routes/AppRoutes.js","routes/Routes.js","routes/App.js","serviceWorker.js","index.js"],"names":["module","exports","API","axios","create","baseURL","process","timeout","mode","header","BaseGendpoint","base","verb","path","body","params","then","response","data","catch","HandlerError","err","Error","message","LogingRequest","UserRequest","RegisterRequest","localStorageKey","token","a","delay","userInfo","handleAuthResponse","authToken","window","sessionStorage","setItem","login","email","password","loginRespone","register","registerResponse","AuthContext","React","createContext","AuthProvider","props","history","useHistory","useState","status","error","user","setData","auth","responseUser","hasOwnProperty","push","registerParams","responseRegister","console","log","useEffect","getItem","Provider","value","logout","removeItem","useAuthState","useContext","UserContext","UserProvider","withRouter","children","Buttons","styled","button","buttonType","Button","onClick","defaultProps","LandingContent","section","attrs","img","defaultBack","size","LandingP","p","GlobalStyle","createGlobalStyle","CenterDiv","div","direction","CardDiv","LogoContainer","defaultBrand","Logo","imagePath","imageSize","LandingWraper","Landing","to","useFormTextField","initialValue","validate","setError","setValue","onChange","useCallback","e","target","InpuText","input","colorFocus","LabelText","label","SpanError","span","InputContainer","TextInput","id","type","logical","placeholder","errorMessage","htmlFor","rotateKeyframes","keyframes","SpinerContainer","color","time","duration","css","Rotate360","Spiner","icon","bxLoaderAlt","emailValidation","values","test","passwordValidation","length","requiredValidation","SingIn","emailField","passwordField","onSubmit","preventDefault","sha1","Register","object","passwordFieldRepeat","match","orgField","nameField","lastField","userNameField","organization","first_name","last_name","username","exact","component","Home","name","PrivateRoute","Component","authed","rest","render","pathname","state","from","location","authAndUser","Routes","App","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92df287a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing_background.2784c49a.png\";","module.exports = __webpack_public_path__ + \"static/media/event_up_logo.73f4c4c0.svg\";","import { API_URL } from '../consts';\nimport axios from 'axios';\n\nconst API = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  mode: 'cors',\n  header: {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Credentials': true,\n    'Content-Type': 'application/json',\n  },\n});\nexport const BaseGendpoint = (base, verb) => ({\n  path = '',\n  body = null,\n  params,\n}) =>\n  API[verb](`${base}/${path}`, body, { params })\n    .then((response) => response.data)\n    .catch(HandlerError);\n\nconst HandlerError = (err) => {\n  let { data } = err.response;\n  throw new Error(data.message);\n};\nexport default API;\n","export const API_URL = process.env.REACT_APP_API_URL;\n\nexport const ERROR_REQUIRED_EMAIL = 'Email address is required';\n\nexport const ERROR_VALID_EMAIL = 'Email address is invalid';\n\nexport const ERROR_REQUIRED_PW = 'Password required';\n\nexport const ERROR_VALID_PW = 'Password need more caracters';\n\nexport const ERROR_MATCH = 'This not Match !';\n\nexport const ERROR_REQUIRED = 'Input Required';\n","import { BaseGendpoint } from '../api';\n\nexport const LogingRequest = BaseGendpoint('users/login', 'post');\n\nexport const UserRequest = BaseGendpoint('user', 'get');\n\nexport const RegisterRequest = BaseGendpoint('users/signup', 'post');\n","import {\n  LogingRequest,\n  UserRequest,\n  RegisterRequest,\n} from './utility/enpoints/auth';\nconst localStorageKey = '__event_up_auth_provider_token__';\n\nasync function userByToken(token) {\n  // TODO CHANGE USING https://reqres.in/\n  let userInfo = await UserRequest({\n    path: '1',\n    body: null,\n    params: {\n      delay: 2,\n    },\n  });\n  return userInfo;\n}\nfunction getToken() {\n  return window.sessionStorage.getItem(localStorageKey);\n}\n\nfunction handleAuthResponse({ authToken }) {\n  if (authToken) {\n    window.sessionStorage.setItem(localStorageKey, authToken);\n    return authToken;\n  }\n  throw new Error('No Auth Token');\n}\n\nasync function login(email, password) {\n  try {\n    let loginRespone = await LogingRequest({\n      path: '',\n      body: {\n        email,\n        password,\n      },\n      params: {},\n    });\n    handleAuthResponse(loginRespone.data);\n    return loginRespone;\n  } catch (error) {\n    throw error;\n  }\n}\n\nasync function register(data) {\n  try {\n    let registerResponse = await RegisterRequest({\n      path: '',\n      body: { ...data },\n      params: {},\n    });\n    return registerResponse;\n  } catch (err) {\n    throw err;\n  }\n}\n\nfunction logout() {\n  window.sessionStorage.removeItem(localStorageKey);\n}\n\nexport { getToken, login, register, logout, localStorageKey, userByToken };\n","import React, { useState, useEffect } from 'react';\nimport * as auth from '../auth-provider';\nimport { useHistory } from 'react-router-dom';\n\nconst AuthContext = React.createContext();\nexport const AuthProvider = (props) => {\n  let history = useHistory();\n  const [data, setData] = useState({\n    status: 'initial',\n    error: null,\n    user: null,\n  });\n  // make a login request\n  const login = async (user, password) => {\n    setData({\n      status: 'pending',\n      error: null,\n      user: null,\n    });\n    try {\n      const responseUser = await auth.login(user, password);\n      if (responseUser.hasOwnProperty('data') && responseUser.status) {\n        setData({\n          status: 'success',\n          error: null,\n          user: { ...responseUser.data.user },\n        });\n        history.push('/dashboard');\n      } else {\n        setData({\n          status: 'error',\n          error: null,\n          user: null,\n        });\n      }\n    } catch (err) {\n      setData({ status: 'error', error: err, user: null });\n    }\n  };\n  const register = async (registerParams) => {\n    setData({\n      status: 'pending',\n      error: null,\n      user: null,\n    });\n    try {\n      const responseRegister = await auth.register(registerParams);\n      setData({\n        status: 'success',\n        error: null,\n        user: null,\n      });\n      // DISPATCH MESSAGE SUCCES Revirew email\n      console.log(\n        '%c Check your email',\n        'background-color: green; color:white;',\n        responseRegister.data.email\n      );\n      history.push('/dashboard');\n    } catch (err) {\n      console.log('%c Error on', err);\n      setData({ status: 'error', error: err, user: null });\n    }\n  }; // register the user\n  const logout = () => {\n    // remove info on localStorage and clean the user\n    auth.logout();\n    setData({ status: 'initial', error: null, user: null });\n    history.push('/');\n  }; // clear the token in localStorage and the user data\n  useEffect(() => {\n    let token = auth.getToken();\n    if (token) {\n      const response = auth.userByToken(token);\n      setData({ status: 'success', error: null, user: response });\n    } else {\n      setData({ status: 'initial', error: null, user: null });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{ data, login, logout, register }}\n      {...props}\n    />\n  );\n};\nexport const useAuthState = () => React.useContext(AuthContext);\n","import React from 'react';\nimport { useAuthState } from './auth-context';\nconst UserContext = React.createContext();\n\nexport const UserProvider = (props) => (\n  <UserContext.Provider value={useAuthState().data.user} {...props} />\n);\n\nexport const useUser = () => React.useContext(UserContext);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { AuthProvider } from './auth-context';\nimport { UserProvider } from './user-context';\nfunction AppProviders({ children }) {\n  return (\n    <AuthProvider>\n      <UserProvider>{children}</UserProvider>\n    </AuthProvider>\n  );\n}\nAppProviders.propTypes = {\n  children: PropTypes.array,\n};\nexport default withRouter(AppProviders);\n","import styled from 'styled-components';\n\nexport const Buttons = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 1em;\n  padding: 0.5rem 2rem;\n  background: ${(props) =>\n    props.buttonType === 'primary' ? 'var(--secondary-color)' : 'transparent'};\n  border: ${(props) =>\n    props.buttonType === 'primary'\n      ? '1px solid var(--secondary-color)'\n      : '1px solid var(--black)'};\n  color: var(--black);\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 700;\n  border-radius: 0.5rem;\n  transition: background 0.3s ease-in-out;\n  &:hover {\n    background: ${(props) =>\n      props.buttonType === 'primary'\n        ? 'var(--white)'\n        : 'var(--secondary-color)'};\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Buttons } from './styles';\n\nconst Button = ({ children, buttonType, onClick }) => (\n  <Buttons buttonType={buttonType} onClick={onClick}>\n    {children}\n  </Buttons>\n);\n\nButton.defaultProps = {\n  buttonType: 'primary',\n};\n\nButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func.isRequired,\n  buttonType: PropTypes.oneOf(['primary', 'outline']),\n};\n\nexport default Button;\n","import styled from 'styled-components';\nimport defaultBack from '../../assets/landing_background.png';\nexport const LandingContent = styled.section.attrs((props) => ({\n  img: props.img ? props.img : defaultBack,\n  size: props.size ? props.size : '50',\n}))`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100vw;\n  color: var(--light-grey-2);\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-image: url(${(props) => props.img});\n`;\nexport const LandingP = styled.p`\n  text-align: center;\n  font-family: Open Sans;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 27px;\n  margin-bottom: 40px;\n  margin-top: 20px;\n`;\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --primary-color: #125E68;\n    --secondary-color: #FFD43B;\n    --black: #373737;\n    --white: #FFFFFF;\n    --grey: #808080;\n    --light-green: #DBE7E8;\n    --light-grey-1: #F9F9F9;\n    --light-grey-2: #CDCDCD;\n    --published: #3EE778;\n    --error: #FFCFC9;\n    --success: #C6FFD9;\n    --gradient-green: linear-gradient(var(--primary-color) 50%, #417E86);\n    --gradient-light-green: linear-gradient(#DBE7E8 40%, #E3ECED);\n    --shadow: 0 4px 8px rgba(55,55,55,.1);\n  }\n  html {\n    box-sizing: border-box;\n    font-family: 'Open Sans', sans-serif;\n    color: var(--black);\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n\n  }\n  *, *::before, *::after {\n    box-sizing: inherit;\n  }\n  body,\n  div,\n  header,\n  section,\n  article,\n  aside,\n  nav,\n  ul,\n  ol,\n  li,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  ul {\n    list-style: none;\n  }\n  button {\n    background: transparent;\n    border: 0;\n    outline: 0;\n  }\n  a {\n    text-decoration: none;\n  }\n\n`;\n\nexport const CenterDiv = styled.div`\n  display: flex;\n  flex-direction: ${(props) => (props.direction ? props.direction : 'column')};\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const CardDiv = styled.div`\n  background: var(--light-grey-1);\n  box-shadow: var(--shadow);\n  border-radius: 8px;\n  padding: 30px;\n`;\n","import styled from 'styled-components';\nimport defaultBrand from '../../assets/event_up_logo.svg';\n\nexport const LogoContainer = styled.div.attrs((props) => ({\n  img: props.img ? props.img : defaultBrand,\n  size: props.size ? props.size : 50,\n}))`\n  background-image: url(${(props) => props.img});\n  background-repeat: no-repeat;\n  background-size: contain;\n  height: ${(props) => `${props.size}px`};\n  width: 250px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LogoContainer } from './styles';\n\nconst Logo = ({ imagePath, imageSize }) => {\n  return <LogoContainer img={imagePath} size={imageSize} />;\n};\nLogo.propTypes = {\n  imagePath: PropTypes.string,\n  imageSize: PropTypes.number,\n};\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { LandingContent, LandingP } from './styles';\nimport { CenterDiv } from '../../styles/GlobalStyles';\nimport Logo from '../Logo';\nconst LandingWraper = ({ children }) => {\n  return (\n    <LandingContent>\n      <CenterDiv>\n        <Logo />\n        <LandingP>\n          The place where you can create <br />\n          and manage all your <br /> organization events\n        </LandingP>\n        {children}\n      </CenterDiv>\n    </LandingContent>\n  );\n};\nLandingWraper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default LandingWraper;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Button from '../../components/Button';\nimport LandingWraper from '../../components/LandingWraper';\nimport { CenterDiv } from '../../styles/GlobalStyles';\nconst Landing = () => {\n  return (\n    <LandingWraper>\n      <CenterDiv direction='row'>\n        <Link to='/signin'>\n          <Button buttonType={'primary'}>Sign In</Button>\n        </Link>\n        <Link to='/signup'>\n          <Button buttonType={'primary'}>Sign Up</Button>\n        </Link>\n      </CenterDiv>\n    </LandingWraper>\n  );\n};\nexport default Landing;\n","import { useCallback, useState } from 'react';\n// based on https://blog.logrocket.com/forms-in-react-in-2020/\n/**\n * \n * @param {String} initialValue\n * const emailField = useFormTextField();\n * <input\n          type=\"email\"\n          id=\"email\"\n          {...emailField}\n        />\n    @returns {Object} {value: String, onChange:Function}\n */\nexport const useFormTextField = (initialValue = '', validate = () => '') => {\n  const [error, setError] = useState('');\n  const [value, setValue] = useState(initialValue);\n\n  const onChange = useCallback(\n    (e) => {\n      setError(validate(e.target.value));\n      return setValue(e.target.value);\n    },\n    [validate]\n  );\n  return { value, onChange, error };\n};\n/**\n * \n * @param {Object} initialValues \n *   const { formFields, createChangeHandler } = useFormFields({\n    email: \"\",\n    password: \"\",\n  });\n  <input\n          type=\"email\"\n          id=\"email\"\n          value={formFields.email}\n          onChange={createChangeHandler(\"email\")}\n        />\n */\nexport const useFormFields = (initialValues, validations) => {\n  const [errors, setErrors] = useState({});\n  const [formFields, setFormFields] = useState(initialValues);\n  // custer of handler event\n  const createChangeHandler = (key) => (e) => {\n    const value = e.target.value;\n    setErrors((prev) => ({ ...prev, [key]: validations[key](value) }));\n    setFormFields((prev) => ({ ...prev, [key]: value }));\n  };\n  return { formFields, createChangeHandler, errors };\n};\n","import styled from 'styled-components';\n\nexport const InpuText = styled.input.attrs((props) => ({\n  colorFocus: props.error\n    ? 'var(--error)'\n    : props.colorFocus || 'var(--secondary-color)',\n}))`\n  width: 300px;\n  height: 35px;\n  outline: none;\n  margin-top: 5px;\n  padding: 6px;\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n  background: var(--white);\n  border: 1px solid var(--grey);\n  border-radius: 8px;\n  &:hover,\n  &:active,\n  &:focus {\n    border-color: ${(props) => props.colorFocus};\n    box-shadow: 0 0 4px ${(props) => props.colorFocus};\n  }\n`;\nexport const LabelText = styled.label`\n  color: var(--grey);\n`;\nexport const SpanError = styled.span`\n  display: block;\n  height: 20px;\n  color: var(--error);\n`;\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InpuText, LabelText, SpanError, InputContainer } from './styles';\nconst TextInput = ({ label, id, type, logical, placeholder, errorMessage }) => {\n  return (\n    <InputContainer>\n      <LabelText htmlFor={id}>{label}</LabelText>\n      <InpuText\n        error={errorMessage}\n        type={type}\n        id={id}\n        {...logical}\n        placeholder={placeholder}\n      />\n      <SpanError>{errorMessage}</SpanError>\n    </InputContainer>\n  );\n};\n\nTextInput.defaultProps = {\n  label: 'Input',\n  placeholder: '',\n  type: 'text',\n  errorMessage: '',\n};\n\nTextInput.propTypes = {\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  errorMessage: PropTypes.string,\n  logical: PropTypes.shape({\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n  }).isRequired,\n  id: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['password', 'email', 'text', 'url']),\n};\n\nexport default TextInput;\n","import { css, keyframes } from 'styled-components';\n\nconst rotateKeyframes = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\nexport const Rotate360 = ({\n  time = '3s',\n  type = 'linear',\n  duration = 'infinite',\n} = {}) => css`\n  animation: ${rotateKeyframes} 2s linear infinite;\n`;\n// animation: ${rotateKeyframes} ${time} ${type} ${duration};\n","import styled from 'styled-components';\nimport { Rotate360 } from '../../styles/animations';\n\nexport const SpinerContainer = styled.div.attrs((props) => ({\n  size: props.size ? props.size : '20',\n  color: props.color ? props.color : 'var(--grey)',\n}))`\n  ${Rotate360()}\n  display: flex;\n  width: ${(props) => `${props.size}px`};\n  height: ${(props) => `${props.size}px`};\n  justify-content: center;\n  align-items: center;\n  color: ${(props) => props.color};\n  font-size: ${(props) => `${props.size}px`};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport bxLoaderAlt from '@iconify/icons-bx/bx-loader-alt';\n\nimport { SpinerContainer } from './styles';\nconst Spiner = ({ size, color }) => (\n  <SpinerContainer color={color} size={size}>\n    <Icon icon={bxLoaderAlt} />\n  </SpinerContainer>\n);\n\nSpiner.propTypes = {\n  size: PropTypes.number,\n  color: PropTypes.string,\n};\nexport default Spiner;\n","import {\n  ERROR_REQUIRED_EMAIL,\n  ERROR_VALID_EMAIL,\n  ERROR_REQUIRED_PW,\n  ERROR_VALID_PW,\n  ERROR_MATCH,\n  ERROR_REQUIRED,\n} from '../consts';\nexport const emailValidation = (values) => {\n  let error = null;\n  if (!values) {\n    error = ERROR_REQUIRED_EMAIL;\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values)) {\n    error = ERROR_VALID_EMAIL;\n  }\n  return error;\n};\nexport const passwordValidation = (values) => {\n  let error = null;\n  if (!values) {\n    error = ERROR_REQUIRED_PW;\n  } else if (values.length < 6) {\n    error = ERROR_VALID_PW;\n  }\n  return error;\n};\nexport const requiredValidation = (values) => {\n  let error = null;\n  if (!values) {\n    error = ERROR_REQUIRED;\n  }\n  return error;\n};\n/**\n *\n * @param {String} match the string to be matched\n *  const matchMesage = matchValidation('This si my passwod');\n * @return {Function}\n * @param {String} value the value to mathc\n *  matchMesage(pw)\n */\nexport const matchValidation = (object) => (match) => {\n  let error = null;\n  if (object.value !== match) {\n    error = ERROR_MATCH;\n  }\n  return error;\n};\n","import React from 'react';\nimport sha1 from 'js-sha1';\nimport { Link } from 'react-router-dom';\nimport { CenterDiv, CardDiv } from '../../styles/GlobalStyles';\nimport { useAuthState } from '../../context/auth-context';\nimport { useFormTextField } from '../../utility/hooks/useFormFields';\nimport TextInput from '../../components/TextInput';\nimport Button from '../../components/Button';\nimport Spiner from '../../components/Spiner';\nimport LandingWraper from '../../components/LandingWraper';\nimport { emailValidation } from '../../utility/validations';\nconst SingIn = () => {\n  let { login, data } = useAuthState();\n\n  const emailField = useFormTextField('', emailValidation);\n  const passwordField = useFormTextField();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(emailField.value, sha1(passwordField.value));\n  };\n\n  return (\n    <>\n      <LandingWraper>\n        <form onSubmit={handleSubmit}>\n          <CardDiv>\n            <CenterDiv>\n              <TextInput\n                errorMessage={emailField.error}\n                label='Email'\n                logical={emailField}\n                type={'email'}\n                id={'SI_email'}\n              />\n              <TextInput\n                label='Password'\n                logical={passwordField}\n                type={'password'}\n                id={'SI_password'}\n              />\n              <Button type='submit'>\n                {data.status === 'pending' ? <Spiner /> : 'Sing In'}\n              </Button>\n              <span>\n                Don’t have an account? <Link to='/signup'> Sign Up </Link>\n              </span>\n            </CenterDiv>\n          </CardDiv>\n        </form>\n      </LandingWraper>\n    </>\n  );\n};\nexport default SingIn;\n","import React from 'react';\nimport sha1 from 'js-sha1';\nimport { Link } from 'react-router-dom';\nimport { CenterDiv, CardDiv } from '../../styles/GlobalStyles';\nimport { useAuthState } from '../../context/auth-context';\nimport { useFormTextField } from '../../utility/hooks/useFormFields';\nimport TextInput from '../../components/TextInput';\nimport Button from '../../components/Button';\nimport Spiner from '../../components/Spiner';\nimport LandingWraper from '../../components/LandingWraper';\nimport {\n  emailValidation,\n  passwordValidation,\n  matchValidation,\n  requiredValidation,\n} from '../../utility/validations';\nconst Register = () => {\n  let { register, data } = useAuthState();\n  const emailField = useFormTextField('', emailValidation);\n  const passwordField = useFormTextField('', passwordValidation);\n\n  let passwordFieldRepeat = useFormTextField(\n    '',\n    matchValidation(passwordField)\n  );\n  const orgField = useFormTextField();\n  const nameField = useFormTextField('', requiredValidation);\n  const lastField = useFormTextField('', requiredValidation);\n  const userNameField = useFormTextField('', requiredValidation);\n  const preparData = () => {\n    let Data = {\n      email: emailField.value,\n      password: sha1(passwordField.value),\n      organization: orgField.value,\n      first_name: nameField.value,\n      last_name: lastField.value,\n      username: userNameField.value,\n    };\n    return Data;\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (emailField.error || passwordField.error || passwordFieldRepeat.error) {\n      return;\n    }\n    register(preparData());\n  };\n\n  return (\n    <>\n      <LandingWraper>\n        <form onSubmit={handleSubmit}>\n          <CardDiv>\n            <CenterDiv>\n              <TextInput\n                label='Name'\n                errorMessage={nameField.error}\n                logical={nameField}\n                type={'text'}\n                id={'SU_name'}\n              />\n              <TextInput\n                label='Last Name'\n                errorMessage={lastField.error}\n                logical={lastField}\n                type={'text'}\n                id={'SU_lastName'}\n              />\n              <TextInput\n                label='User Name'\n                errorMessage={userNameField.error}\n                logical={userNameField}\n                type={'text'}\n                id={'SU_Username'}\n              />\n              <TextInput\n                errorMessage={emailField.error}\n                label='Email'\n                logical={emailField}\n                type={'email'}\n                id={'SU_email'}\n              />\n              <TextInput\n                label='Organization'\n                logical={orgField}\n                type={'text'}\n                id={'SU_orgs'}\n              />\n              <TextInput\n                label='Password'\n                errorMessage={passwordField.error}\n                logical={passwordField}\n                type={'password'}\n                id={'SU_password'}\n              />\n              <TextInput\n                label='Repeat password'\n                errorMessage={passwordFieldRepeat.error}\n                logical={passwordFieldRepeat}\n                type={'password'}\n                id={'SU_password_Repeat'}\n              />\n\n              <Button type='submit'>\n                {data.status === 'pending' ? <Spiner /> : 'Sing Up'}\n              </Button>\n              <span>\n                Already have an account? <Link to='/signin'> Sign In </Link>\n              </span>\n            </CenterDiv>\n          </CardDiv>\n        </form>\n      </LandingWraper>\n    </>\n  );\n};\nexport default Register;\n","import React from 'react';\nimport { Route } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport Landing from '../containers/Landing';\nimport SingIn from '../containers/SingIn';\nimport Register from '../containers/Register';\n\nconst LandingRoutes = () => (\n  <>\n    <Route path='/' exact component={Landing} />\n    <Route path='/signin' exact component={SingIn} />\n    <Route path='/signup' exact component={Register} />\n  </>\n);\nexport default withRouter(LandingRoutes);\n","import React from 'react';\nimport { useAuthState } from '../../context/auth-context';\nimport { useUser } from '../../context/user-context';\nconst Home = () => {\n  let { logout } = useAuthState();\n  let user = useUser();\n  return (\n    <>\n      <section>\n        <h2>HOOME {user.name}</h2>\n        <button onClick={() => logout()}>LogOut</button>\n      </section>\n    </>\n  );\n};\nexport default Home;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nfunction PrivateRoute({ component: Component, authed, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        authed === true ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{ pathname: '/signin', state: { from: props.location } }}\n          />\n        )\n      }\n    />\n  );\n}\nPrivateRoute.propTypes = {\n  component: PropTypes.func,\n  authed: PropTypes.bool,\n};\nexport default PrivateRoute;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Home from '../containers/Home';\nimport PrivateRoute from './PrivateRoute';\nconst AppRoutes = ({ authAndUser }) => {\n  return (\n    <>\n      <PrivateRoute\n        exact\n        authed={authAndUser}\n        path='/dashboard'\n        component={Home}\n      />\n    </>\n  );\n};\n\nAppRoutes.propTypes = {\n  authAndUser: PropTypes.bool,\n};\nexport default withRouter(AppRoutes);\n","import React from 'react';\n\nimport { useAuthState } from '../context/auth-context';\nimport LandingRoutes from './LandingRoutes';\nimport AppRoutes from './AppRoutes';\nconst Routes = () => {\n  const { data } = useAuthState();\n  return (\n    <>\n      <LandingRoutes />\n      <AppRoutes authAndUser={data.user && data.status === 'success'} />\n    </>\n  );\n};\n\nexport default Routes;\n","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { Switch } from 'react-router';\n\nimport AppProviders from '../context/app-provider';\nimport Routes from './Routes';\nimport { GlobalStyle } from '../styles/GlobalStyles';\nimport '../styles/fonts.css';\nconst App = () => {\n  return (\n    <Router>\n      <AppProviders>\n        <GlobalStyle />\n        <Switch>\n          <Routes />\n        </Switch>\n      </AppProviders>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './routes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}